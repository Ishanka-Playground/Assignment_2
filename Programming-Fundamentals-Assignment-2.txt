Question 01

Statically Typed Language: In a statically typed language, the data types of variables are determined and checked at compile time. it means that we must explicitly declare the data type of each variable before using it, and the compiler enforces strict type checking during the compilation process. Once a variable is assigned a particular data type, it cannot be changed to a different data type later in the program.

Dynamically Typed Language: In a dynamically typed language, the data types of variables are determined and checked at runtime. We don't need to explicitly specify the data type when declaring variables. Instead, the data type is inferred based on the value assigned to the variable at runtime. Also, the type of a variable can be changed during the execution of the program.

Strongly Typed Language: A strongly typed language enforces strict type checking and doesn't allow automatic type conversions between different data types without explicit conversion by the programmer. This means that we cannot perform operations between incompatible data types without explicitly converting them. It helps catch potential type related errors at compile time. Both statically and dynamically typed languages can be strongly typed.

Loosely Typed Language:In contrast, a loosely typed language allows automatic type conversion between different data types without requiring explicit conversion by the programmer. The language system performs implicit type coercion to make the data types compatible for specific operations. This can lead to more flexible coding but might also introduce unexpected behaviors if not used carefully. 

Java is both a statically typed and a strongly typed language.
 
 
Question 02
 
Case Sensitive: A language is considered case sensitive when it treats uppercase and lowercase letters as distinct and significant. This means that using different cases (e.g., uppercase and lowercase) for the same word will result in different meanings or interpretations. For example, "Variable" and "variable" are treated as two different identifiers in a case-sensitive language.

Case Insensitive: A language is considered case insensitive when it treats uppercase and lowercase letters as equivalent. This means that using different cases for the same word will not change the interpretation or meaning of the word. For example, "Variable" and "variable" would be considered the same identifier in a case-insensitive language.

Case Sensitive-Insensitive: Some programming languages and systems can have a mix of case sensitivity in different parts. For example, variable names might be case sensitive, while function names or keywords are case insensitive. It can lead to varying behavior depending on the context.


Question 03


In Java, an identity conversion is a type of type conversion where no actual conversion is performed. It means that the value and the type of the expression remain the same after the conversion. This conversion is called "identity" because it doesn't change anything about the data; it merely reaffirms the type of the expression.

In Java, identity conversion occurs under the following conditions:

1.When you assign a value to a variable of the same type, no conversion is needed, and it is considered an identity conversion.
2.When you pass an argument to a method parameter of the same type, no conversion is needed, and it is considered an identity conversion.
